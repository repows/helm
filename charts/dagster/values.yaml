nameOverride: ""
fullnameOverride: ""

global:
  fullnameOverride: dagster
  serviceAccountName: dagster

dagster:
  enabled: true

  aws:
    region: ""
    accessKey: ""
    secretKey: ""
    credentials: |
      [default]
      aws_access_key_id = 
      aws_secret_access_key =
    config: |
      [default]
      region =

  dagsterWebserver:
    image:
      pullPolicy: IfNotPresent
    service:
      type: LoadBalancer
    nodeSelector:
      kubernetes.io/hostname: master

  postgresql:
    postgresqlDatabase: dagster
    postgresqlUsername: dagster
    postgresqlPassword: password
    persistence:
      existingClaim: dagster-postgresql-pvc
      size: 16Gi
    master:
      nodeSelector:
        kubernetes.io/hostname: master

  rabbitmq:
    enabled: true
    persistence:
      existingClaim: dagster-rabbitmq-pvc
      size: 16Gi
    nodeSelector:
      kubernetes.io/hostname: master

  dagsterDaemon:
    runCoordinator:
      config:
        queuedRunCoordinator:
          maxConcurrentRuns: 10
    nodeSelector:
      kubernetes.io/hostname: master

  runLauncher:
    type: K8sRunLauncher

  dagster-user-deployments:
    deployments:
      - name: acc
        image:
          repository: "repows.io/dagster-acc"
          tag: latest
          pullPolicy: Always
        dagsterApiGrpcArgs:
          - "--module-name"
          - "acc"
        port: 3030
        includeConfigInLaunchedRuns:
          enabled: true
        envConfigMaps:
          - name: dagster-acc-config
        volumes:
          - name: dagster-aws-dir
            secret:
              secretName: dagster-aws-dir
        volumeMounts:
          - mountPath: /root/.aws
            name: dagster-aws-dir
            readOnly: true

      - name: euro
        image:
          repository: "repows.io/dagster-euro"
          pullPolicy: Always
        dagsterApiGrpcArgs:
          - "--module-name"
          - "euro"
        port: 3030
        includeConfigInLaunchedRuns:
          enabled: true
        envConfigMaps:
          - name: dagster-euro-config
        volumes:
          - name: dagster-aws-dir
            secret:
              secretName: dagster-aws-dir
        volumeMounts:
          - mountPath: /root/.aws
            name: dagster-aws-dir
            readOnly: true

      # - name: codec
      #   image:
      #     repository: "repows.io/dagster-codec"
      #     tag: latest
      #     pullPolicy: Always
      #   dagsterApiGrpcArgs:
      #     - "--module-name"
      #     - "codec"
      #   port: 3030
      #   includeConfigInLaunchedRuns:
      #     enabled: true
      #   envConfigMaps:
      #     - name: dagster-codec-config
      #   volumes:
      #     - name: dagster-aws-dir
      #       secret:
      #         secretName: dagster-aws-dir
      #   volumeMounts:
      #     - mountPath: /root/.aws
      #       name: dagster-aws-dir
      #       readOnly: true

dagster-dns:
  enabled: false
  replicaCount: 1
  cloudflare:
    tunnel_token: ""
